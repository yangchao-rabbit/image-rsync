# This is a basic workflow to help you get started with Actions

name: image-rsync

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 23 * * *'
  
env:
  IMAGE_SYNCER_VERSION: v1.3.0
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: docker login
        run: docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
      
      - name: docker pull
        run: |
          docker pull k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1
          docker tag k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1 yangchao1/ingress-nginx/kube-webhook-certgen:v1.1.1
          docker push yangchao1/ingress-nginx/kube-webhook-certgen:v1.1.1
      
      - name: rsync docker image
        run: sh rsync.sh

      - name: install image-sync tool
        run: |
          wget https://github.com/AliyunContainerService/image-syncer/releases/download/${IMAGE_SYNCER_VERSION}/image-syncer-${IMAGE_SYNCER_VERSION}-linux-amd64.tar.gz
          tar -zxf image-syncer-${IMAGE_SYNCER_VERSION}-linux-amd64.tar.gz
      
      - name: init config.yaml with env
        run: |
          sed -i "s#USERNAME#${DOCKERHUB_USERNAME}#g" config.yaml
          sed -i "s#PASSWORD#${DOCKERHUB_PASSWORD}#g" config.yaml
        
      - name: sync images
        run: |
          ./image-syncer --proc=20 --config=config.yaml --retries=2
